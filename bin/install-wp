#!/bin/bash

WP_CORE_DIR="/var/www/html/wordpress"
WP_CONTENT_DIR="/var/www/html/wp-content"
WP_TESTS_DIR="/var/www/html/tests"
WP_THEME_DIR="${WP_CONTENT_DIR}/themes/${WP_THEME_NAME}"

function is_active_theme() {
    RESULT=`wp theme list \
        --status=active \
        --fields=name \
        --format=csv \
        --allow-root \
        --path=${WP_CORE_DIR} \
        | tail -1 \
        2>/dev/null`

    if [ "$RESULT" != "${WP_THEME_NAME}" ]; then
        return 0
    else
        return 1
    fi
}

function is_db_up() {
    RESULT=`mysql \
        -h ${WP_DB_HOST%:*} \
        -P${WP_DB_HOST#*:} \
        -u ${WP_DB_USER} \
        -p${WP_DB_PASSWORD} \
        --skip-column-names \
        -e "SHOW DATABASES LIKE '${WP_DB_NAME}'" \
        2>/dev/null`

    if [ "$RESULT" == "${WP_DB_NAME}" ]; then
        return 0
    else
        return 1
    fi
}

until is_db_up; do
   echo "Waiting for database to become available..."
   sleep 5
done

echo "Database is available. Continuing..."

# Download WordPress
if [ ${WP_VERSION} != $(wp core version --allow-root --path=${WP_CORE_DIR}) ]; then
    echo
    echo "Downloading WordPress..."
    wp core download \
        --allow-root \
        --path=${WP_CORE_DIR} \
        --version="${WP_VERSION}" \
        --force
fi
# Symlink config
echo
echo "Symlink WordPress Config..."
unlink ../wordpress/wp-config.php
ln -s ../wp-config/wp-config.php ../wordpress/wp-config.php

# Install Core
if ! $(wp core is-installed --allow-root --path=${WP_CORE_DIR}); then
    echo
    echo "Installing WordPress..."
    wp core install \
        --allow-root \
        --path=${WP_CORE_DIR} \
        --url=${WP_DOMAIN} \
        --title="${WP_TITLE}" \
        --admin_user=${WP_ADMIN_USER} \
        --admin_password=${WP_ADMIN_PASSWORD} \
        --admin_email=${WP_ADMIN_EMAIL} \
        --skip-email
fi

# Ensure the plugin and theme directories exist
mkdir -p ${WP_CONTENT_DIR}/themes
mkdir -p ${WP_CONTENT_DIR}/plugins

# Checkout/update default theme
echo
if [ ! ${WP_THEME_NAME} ]; then
    echo "You must add the 'WP_THEME_NAME' environment variable to Docker's php services..."
else
    if [ ${WP_THEME_GIT_URL} ]; then
        if [ -d ${WP_THEME_DIR} ]; then
            echo "Updating theme..."
            git -C ${WP_THEME_DIR} pull
        else
            echo "Cloning theme..."
            git clone ${WP_THEME_GIT_URL} ${WP_THEME_DIR}
        fi
    elif [ ${WP_THEME_SVN_URL} ]; then
        if [ -d ${WP_THEME_DIR} ]; then
            echo "Updating theme..."
            svn up ${WP_THEME_DIR}
        else
            echo "Checking out theme..."
            svn co ${WP_THEME_SVN_URL} ${WP_THEME_DIR}
        fi
    elif [ ${WP_THEME_ZIP_URL} ]; then
        wp theme install ${WP_THEME_ZIP_URL} --allow-root
    elif [ ${WP_THEME_CLI} ]; then
        wp theme install ${WP_THEME_NAME} --allow-root
    elif [ ! -d ${WP_THEME_DIR} ]; then
        echo "Could not install theme..."
    fi
    if [ ! is_active_theme ]; then
        wp theme activate ${WP_THEME_NAME} --allow-root
    fi
fi

echo
echo "Installing Plugins..."

cd ${WP_CONTENT_DIR}
composer install
cd - >/dev/null

echo
echo "Activating Plugins..."

wp plugin activate \
	query-monitor \
	--allow-root

# Generate the tests SVN tag
if [[ ${WP_VERSION} =~ [0-9]+\.[0-9]+(\.[0-9]+)? ]]; then
	WP_TESTS_TAG="tags/${WP_VERSION}"
elif [[ ${WP_VERSION} == 'nightly' || ${WP_VERSION} == 'trunk' ]]; then
	WP_TESTS_TAG="trunk"
else
	# http serves a single offer, whereas https serves multiple. we only want one
	download http://api.wordpress.org/core/version-check/1.7/ /tmp/wp-latest.json
	grep '[0-9]+\.[0-9]+(\.[0-9]+)?' /tmp/wp-latest.json
	LATEST_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
	if [[ -z "$LATEST_VERSION" ]]; then
		echo "Latest WordPress version could not be found"
		exit 1
	fi
	WP_TESTS_TAG="tags/$LATEST_VERSION"
fi

# Set up testing suite if it doesn't yet exist
echo
if [ ! -d $WP_TESTS_DIR ]; then
    echo "Creating WordPress Test Suite Directory..."

    # set up testing suite
    mkdir -p $WP_TESTS_DIR
fi

echo "Updating WordPress Test Suite..."
svn co https://develop.svn.wordpress.org/${WP_TESTS_TAG}/tests/phpunit/includes/ $WP_TESTS_DIR/includes
svn co https://develop.svn.wordpress.org/${WP_TESTS_TAG}/tests/phpunit/data/ $WP_TESTS_DIR/data

echo
echo "Done!"

echo
grep "${WP_DOMAIN}" /etc/hosts > /dev/null || echo "Be sure to add '127.0.0.1 ${WP_DOMAIN}' to your /etc/hosts file"

php-fpm -F
